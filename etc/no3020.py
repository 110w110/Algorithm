"""
첫줄 합 계산
입력 받아서 각 H개의 행에 0에서부터 +1 -1 계산
모든 행 중에 가장 큰 값과 그 개수 구함
가장 큰 값에는 첫줄 합을 더해서 출력
"""

# 28 min solved
import sys

N, H = map(int, sys.stdin.readline().split())
D = [int(sys.stdin.readline()) for _ in range(N)]
S = [0 for _ in range(H)]
for i in range(len(D)):
    if i % 2 == 0:
        # 석순 끝나는 지점 : H - D[i] - 1
        S[H - D[i]] += 1
    else:
        # 종유석 : 끝나는 지점 : D[i]
        S[D[i]] -= 1

I = int(N / 2)
S[0] = I
for s in range(1,len(S)):
    S[s] = S[s-1] + S[s]

m = 1e9
c = 1
for r in S:
    if r < m:
        m = r
        c = 1
    elif r == m:
        c += 1
print(m, c)

"""
문제

개똥벌레 한 마리가 장애물(석순과 종유석)로 가득찬 동굴에 들어갔다. 동굴의 길이는 N미터이고, 높이는 H미터이다. (N은 짝수) 첫 번째 장애물은 항상 석순이고, 그 다음에는 종유석과 석순이 번갈아가면서 등장한다.

아래 그림은 길이가 14미터이고 높이가 5미터인 동굴이다. (예제 그림)

이 개똥벌레는 장애물을 피하지 않는다. 자신이 지나갈 구간을 정한 다음 일직선으로 지나가면서 만나는 모든 장애물을 파괴한다.

위의 그림에서 4번째 구간으로 개똥벌레가 날아간다면 파괴해야하는 장애물의 수는 총 여덟개이다. (4번째 구간은 길이가 3인 석순과 길이가 4인 석순의 중간지점을 말한다)

하지만, 첫 번째 구간이나 다섯 번째 구간으로 날아간다면 개똥벌레는 장애물 일곱개만 파괴하면 된다.

동굴의 크기와 높이, 모든 장애물의 크기가 주어진다. 이때, 개똥벌레가 파괴해야하는 장애물의 최솟값과 그러한 구간이 총 몇 개 있는지 구하는 프로그램을 작성하시오.
입력

첫째 줄에 N과 H가 주어진다. N은 항상 짝수이다. (2 ≤ N ≤ 200,000, 2 ≤ H ≤ 500,000)

다음 N개 줄에는 장애물의 크기가 순서대로 주어진다. 장애물의 크기는 H보다 작은 양수이다.
출력

첫째 줄에 개똥벌레가 파괴해야 하는 장애물의 최솟값과 그러한 구간의 수를 공백으로 구분하여 출력한다.
예제 입력 1

6 7
1
5
3
3
5
1

예제 출력 1

2 3

예제 입력 2

14 5
1
3
4
2
2
4
3
4
3
3
3
2
3
3

예제 출력 2

7 2

"""